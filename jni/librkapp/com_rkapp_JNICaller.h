/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_rkapp_JNICaller */

#ifndef _Included_com_rkapp_JNICaller
#define _Included_com_rkapp_JNICaller
#ifdef __cplusplus
extern "C" {
#endif

	/*
	 * Class:     com_rkapp_JNICaller
	 * Method:    initialize
	 * Signature: ()Z
	 */
	JNIEXPORT jboolean JNICALL Java_com_rkapp_JNICaller_initializeWorker
	(JNIEnv *, jobject);
	/*
	 * Class:     com_rkapp_JNICaller
	 * Method:    finalize
	 * Signature: ()V
	 */
	JNIEXPORT void JNICALL Java_com_rkapp_JNICaller_finalizeWorker
	(JNIEnv *, jobject);

	/*
	 * Class:     com_rkapp_JNICaller
	 * Method:    openSync
	 * Signature: ()Z
	 */
	JNIEXPORT jboolean JNICALL Java_com_rkapp_JNICaller_openSync
	(JNIEnv *, jobject);

	/*
	 * Class:     com_rkapp_JNICaller
	 * Method:    turnLedRed
	 * Signature: ()Z
	 */
	JNIEXPORT jboolean JNICALL Java_com_rkapp_JNICaller_turnLedRed
	(JNIEnv *, jobject);

	/*
	 * Class:     com_rkapp_JNICaller
	 * Method:    turnLedGreen
	 * Signature: ()Z
	 */
	JNIEXPORT jboolean JNICALL Java_com_rkapp_JNICaller_turnLedGreen
	(JNIEnv *, jobject);

	/*
	 * Class:     com_rkapp_JNICaller
	 * Method:    setFilePath
	 * Signature: (Ljava/lang/String;)V
	 */
	JNIEXPORT void JNICALL Java_com_rkapp_JNICaller_setFilePath
	(JNIEnv *, jobject, jstring);

#ifdef __cplusplus
}
#endif
#endif
